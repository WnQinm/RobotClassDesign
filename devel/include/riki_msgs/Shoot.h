// Generated by gencpp from file riki_msgs/Shoot.msg
// DO NOT EDIT!


#ifndef RIKI_MSGS_MESSAGE_SHOOT_H
#define RIKI_MSGS_MESSAGE_SHOOT_H

#include <ros/service_traits.h>


#include <riki_msgs/ShootRequest.h>
#include <riki_msgs/ShootResponse.h>


namespace riki_msgs
{

struct Shoot
{

typedef ShootRequest Request;
typedef ShootResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Shoot
} // namespace riki_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::riki_msgs::Shoot > {
  static const char* value()
  {
    return "b8e8bf26b20382c114e84bf5da39d6e4";
  }

  static const char* value(const ::riki_msgs::Shoot&) { return value(); }
};

template<>
struct DataType< ::riki_msgs::Shoot > {
  static const char* value()
  {
    return "riki_msgs/Shoot";
  }

  static const char* value(const ::riki_msgs::Shoot&) { return value(); }
};


// service_traits::MD5Sum< ::riki_msgs::ShootRequest> should match
// service_traits::MD5Sum< ::riki_msgs::Shoot >
template<>
struct MD5Sum< ::riki_msgs::ShootRequest>
{
  static const char* value()
  {
    return MD5Sum< ::riki_msgs::Shoot >::value();
  }
  static const char* value(const ::riki_msgs::ShootRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::riki_msgs::ShootRequest> should match
// service_traits::DataType< ::riki_msgs::Shoot >
template<>
struct DataType< ::riki_msgs::ShootRequest>
{
  static const char* value()
  {
    return DataType< ::riki_msgs::Shoot >::value();
  }
  static const char* value(const ::riki_msgs::ShootRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::riki_msgs::ShootResponse> should match
// service_traits::MD5Sum< ::riki_msgs::Shoot >
template<>
struct MD5Sum< ::riki_msgs::ShootResponse>
{
  static const char* value()
  {
    return MD5Sum< ::riki_msgs::Shoot >::value();
  }
  static const char* value(const ::riki_msgs::ShootResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::riki_msgs::ShootResponse> should match
// service_traits::DataType< ::riki_msgs::Shoot >
template<>
struct DataType< ::riki_msgs::ShootResponse>
{
  static const char* value()
  {
    return DataType< ::riki_msgs::Shoot >::value();
  }
  static const char* value(const ::riki_msgs::ShootResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RIKI_MSGS_MESSAGE_SHOOT_H
