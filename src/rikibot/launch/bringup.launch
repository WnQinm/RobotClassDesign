<launch>
  <arg name="imu_type" value="$(env RIKIIMU)"/>
  <arg name="car_type" value="$(env RIKIMODEL)"/>
  <arg name="cmm_type" value="$(env CMM_MODE)"/>
 
  <arg if="$(eval arg('car_type') == 'x4')" name="low_bat"      default="11.3"/>
  <arg if="$(eval arg('car_type') == 'xarm')" name="low_bat"    default="11.3"/>
  <arg if="$(eval arg('car_type') == 'xs')" name="low_bat"      default="25.2"/>
  <arg if="$(eval arg('car_type') == 'fx4')" name="low_bat"     default="25.2"/>
  
  <group if="$(eval arg('cmm_type') == 'rosserial')">
      <!--serial communication between arduino and pc via usb /-->
      <node name="arduino_serial_node" pkg="rosserial_python" type="serial_node.py" output="screen">
          <param name="port" value="/dev/rikibase" />
          <param name="baud" value="115200" />
      </node>
      <group if="$(eval arg('imu_type') == 'mpu6050')">
      <!-- IMU Relay and Filter -->
      <!-- IMU relay from rikirobot_msgs/Imu to sensor_msgs/Imu -->
      	   <node pkg="imu_calib" type="apply_calib" name="apply_calib" output="screen" respawn="false">
              <param name="calib_file" value="$(find rikibot)/param/imu/imu_calib.yaml" />
              <param name="calibrate_gyros" value="true" />
           </node>

      </group>

      <group if="$(eval arg('imu_type') == 'hfi')">
           <include file="$(find rikibot_usb_imu)/launch/rikibot_imu.launch" />
      </group>
  </group>

  <group if="$(eval arg('cmm_type') == 'serial')">
      <include file="$(find rikibot_driver)/launch/rikibot_driver.launch" />
  </group>


    <!-- Filter and fuse raw imu data -->
    <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick" output="screen" respawn="false" >
        <param name="fixed_frame" value="base_footprint" />
        <param name="use_mag" value="false" />
        <param name="publish_tf" value="false" />
        <param name="use_magnetic_field_msg" value="false" />
        <param name="world_frame" value="enu" />
        <param name="orientation_stddev" value="0.05" />
        <param name="angular_scale" value="1.0134" />
    </node>

    <!-- Publish Rikirobot odometry -->
    <node pkg="rikibot" name="riki_base_node" type="riki_base_node">
    	<param name="linear_scale" type="double" value="1.08" />
    	<param name="low_battery" type="double" value="10.6" />
    </node>

    <!-- Publish static transform from base_footprint to imu_link -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_footprint_to_imu_link" args="0 0 0 0 0 0  /base_footprint /imu_link"/>

    <!-- Publish static transform from base_footprint to base_link -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_footprint_to_base_link" args="0 0 0 0 0 0  /base_footprint /base_link "/>

    <!-- Odom-IMU Extended Kalman Filter-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization"> 
        <remap from="odometry/filtered" to="odom" />
        <rosparam command="load" file="$(find rikibot)/param/ekf/robot_localization.yaml" />
    </node>

    <param name="robot_description" textfile="$(find rikibot_description)/urdf/rikibot_x4.urdf" />
    <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /-->


</launch>
