<launch>
  <arg name="car_type" value="$(env RIKIMODEL)"/>
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
  <param name="serial_port"         type="string" value="/dev/rikilidar"/>
  <!--param name="serial_baudrate"     type="int"    value="115200"/--><!--A1/A2 -->
  <param name="serial_baudrate"     type="int"    value="256000"/><!--A3 -->
  <param name="frame_id"            type="string" value="laser"/>
  <param name="inverted"            type="bool"   value="false"/>
  <param name="angle_compensate"    type="bool"   value="true"/>
  <remap from="/scan" to="/scan_raw"/>
  </node>

  <group if="$(eval arg('car_type') == 'x4')">
  	<node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_laser" args="0.04 0 0.18 0 0 0  /base_link /laser"/>
  </group>

  <group if="$(eval arg('car_type') == 'xs')">
  	<node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_laser" args="0.12 0 0.18 0 0 0  /base_link /laser"/>
  </group>

  <group if="$(eval arg('car_type') == 'xarm')">
  	<node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_laser" args="0.11 0 0.18 0 0 0  /base_link /laser"/>
  </group>

  <group if="$(eval arg('car_type') == 'fx4')">
  	<node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_laser" args="0.12 0 0.3 0 0 0  /base_link /laser"/>
  </group>

  <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="log" name="laser_filter">
        <rosparam command="load" file="$(find rikibot)/param/lidar/$(env RIKIMODEL)_laserfilter.yaml"/>
        <remap from="/scan" to="/scan_raw"/>
        <remap from="/scan_filtered" to="/scan"/>
   </node>

</launch>

